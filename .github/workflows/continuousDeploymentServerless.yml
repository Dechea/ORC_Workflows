name: Continuous Deployment Serverless

on:
  workflow_call:
    inputs:
      PROD_INSTANCES:
        description: 'The instances where to deploy the code on prod.
                      Needs to be a comma separated list.
                      Example: prod, dev-hes'
        required: true
        type: string
      MUTATION_TEST:
        description: 'Run all unit tests again with stryker.'
        required: false
        default: false
        type: boolean
    secrets:
      SERVERLESS_TOKEN:
        description: 'The token used to access your serverless instance.
                      Managed by Doppler'
        required: true

jobs:
  buildAndTest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js
        id: cache-node-modules
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Build and Test App
        run: |
          mv .npmrc_config .npmrc
          export SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_TOKEN }}
          npm install -g npm
          npm install --force
          npm ci
          npm run test

      - name: Build and run stryker mutation test
        if: ${{ inputs.MUTATION_TEST == 'true' }}
        run: |
          mv .npmrc_config .npmrc
          npm install -g npm
          npm install --force
          npm run test:mutation

  deployDev:
    runs-on: ubuntu-latest
    needs: buildAndTest
    if:  "!contains(github.event.head_commit.message, '--skip-ci') && github.event_name == 'push' && github.ref_name != 'main'"

    steps:
      - name: deploy to ${{ inputs.PROD_INSTANCES }}
        run: |
          mv .npmrc_config .npmrc
          export SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_TOKEN }}
          npm ci
          IFS="," read -a instances <<< ${{ inputs.PROD_INSTANCES }}
          for index in "${!instances[@]}"
          do
            echo "Deploying to ${instances[index]}"
          done
          echo "Successfully deployed to all instances"

#      - name: Checkout source code
#        uses: actions/checkout@v3
#
#      - name: Setup Node.js
#        id: cache-node-modules
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16'
#          cache: 'npm'
#
#      - name: deploy dev
#        run: |
#          echo "Deploying to dev"
#          export SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_TOKEN }}
#          mv .npmrc_config .npmrc
#          npm ci
#          npx cloud deploy dev
#
#  deployProd:
#    runs-on: ubuntu-latest
#    needs: [ buildAndTest ]
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v3
#
#      - name: Setup Node.js
#        id: cache-node-modules
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16'
#          cache: 'npm'
#
#      - name: deploy to ${{ inputs.PROD_INSTANCES }}
#        run: |
#          mv .npmrc_config .npmrc
#          export SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_TOKEN }}
#          npm ci
#          IFS="," read -a instances <<< ${{ inputs.PROD_INSTANCES }}
#          for index in "${!instances[@]}"
#          do
#            echo "Deploying to ${instances[index]}"
#            npx cloud promote dev ${instances[index]}
#          done
#          echo "Successfully deployed to all instances"