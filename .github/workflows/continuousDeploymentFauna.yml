name: Continuous Deployment Fauna

on:
  workflow_call:
    inputs:
      FAUNA_DATABASE:
        description: 'The target database name where you want to apply the migration.'
        required: true
        type: string
      MUTATION_TEST:
        description: 'Run all unit tests again with stryker.'
        required: false
        type: boolean
    secrets:
      GITHUB_PAT:
        description: 'Personal access token used to access all *_Schema GitHub repos.
                      Managed by Doppler'
        required: true
      FAUNA_REGION:
        description: 'The domain where your databases are hosted. 
                      Allowed values: us, eu, classic, preview
                      Managed by Doppler'
        required: true
      FAUNA_TOKEN:
        description: 'The token used to access your Fauna database defined in FAUNA_DATABASE.
                      Managed by Doppler'
        required: true
      FAUNA_CHILD_DB:
        description: 'The token used to access your Fauna database used to run unit and integration tests.
                      Managed by Doppler [Key: FAUNA_TOKEN_UNIT_INTEGRATION_TESTING]'
        required: true
      SONAR_TOKEN_SCHEMA:
        description: 'The token used to upload the scan results to Sonarcloud.
                      Managed by Doppler
                      DEPRECATED'
        required: true

jobs:
  set-correct-envs:
    runs-on: ubuntu-latest

    outputs:
      GITHUB_REPOSITORIES: ${{ steps.get_repos.outputs.GITHUB_REPOSITORIES }}

    steps:
      - name: Install libraries
        run: |
          sudo apt-get install curl jq -y
        shell: bash

      - name: Set correct branch
        id: set_branch
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "::set-output name=BRANCH_NAME::${{ github.head_ref }}"
          else
            echo "::set-output name=BRANCH_NAME::${{ github.ref_name }}"
          fi
        shell: bash

      - uses: actions/checkout@v3
        with:
          repository: 'Dechea/ORC_Workflows'
          ref: 'main'

      - name: Get All Repo Names
        id: get_repos
        run: |
          chmod u+x ./scripts/get_all_domains.sh
          GITHUB_REPOSITORIES=$( ./scripts/get_all_domains.sh ${{ secrets.GITHUB_PAT }} ${{ github.repository }} ${{ steps.set_branch.outputs.BRANCH_NAME }} )
          echo $GITHUB_REPOSITORIES
          echo "::set-output name=GITHUB_REPOSITORIES::$GITHUB_REPOSITORIES"
        shell: bash

  build:
    runs-on: ubuntu-latest

    needs: set-correct-envs

    steps:
      - uses: actions/checkout@v3
      - name: Fauna Domain IaC
        uses: Dechea/Fauna-Domain-IaC_-Action-@main
        with:
          GITHUB_REPOSITORIES: ${{ needs.set-correct-envs.outputs.GITHUB_REPOSITORIES }}
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
          FAUNA_DATABASE: ${{ inputs.FAUNA_DATABASE}}
          FAUNA_REGION: ${{ secrets.FAUNA_REGION }}
          FAUNA_TOKEN: ${{ secrets.FAUNA_TOKEN }}
          FAUNA_CHILD_DB: ${{ secrets.FAUNA_CHILD_DB }}
          MUTATION_TEST: ${{ inputs.MUTATION_TEST }}

      - uses: actions/download-artifact@v3
        name: Get coverage report artifact
        with:
          name: coverage-files
          path: coverage

      # TBD - DEPRECATED - Needs to be removed after finished Bitbucket to GitHub migration
      - uses: sonarsource/sonarcloud-github-action@master
        name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SCHEMA }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 10
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SCHEMA }}
